const http = require('http');
const path = require('path');
const Raldowork = require('./raldowork');

const PORT = 3131;

const CONTENT_TYPES = {
  '.html': 'text/html',
  '.css': 'text/css',
  '.js': 'application/javascript',
  '.json': 'application/json',
  '.png': 'image/png',
  '.jpg': 'image/jpeg',
  '.jpeg': 'image/jpeg',
  '.gif': 'image/gif',
  '.svg': 'image/svg+xml',
  '.ico': 'image/x-icon',
  '.txt': 'text/plain',
  '.md': 'text/markdown'
};

function getContentType(filePath) {
  const ext = path.extname(filePath).toLowerCase();
  return CONTENT_TYPES[ext] || 'application/octet-stream';
}

function renderHTML() {
  const projects = Raldowork.list();
  const projectLinks = projects
    .map(project => `<li><a href="/${encodeURIComponent(project)}/">${project}</a></li>`)
    .join('');

  return `
    <!DOCTYPE html>
    <html>
    <head><title>Raldowork Projects</title></head>
    <body>
      <h1>Projects</h1>
      <ul>${projectLinks}</ul>
    </body>
    </html>
  `;
}

function renderDirectory(projectName, files) {
  const fileList = files
    .map(file => `<li><a href="/${encodeURIComponent(projectName)}/${encodeURIComponent(file)}">${file}</a></li>`)
    .join('');

  return `
    <!DOCTYPE html>
    <html>
    <head><title>${projectName}</title></head>
    <body>
      <h1>${projectName}</h1>
      <ul>${fileList}</ul>
      <a href="/">Back to projects</a>
    </body>
    </html>
  `;
}

const server = http.createServer((req, res) => {
  const url = new URL(req.url, `http://${req.headers.host}`);
  const pathParts = url.pathname.split('/').filter(Boolean);

  if (pathParts.length === 0) {
    res.writeHead(200, {'Content-Type': 'text/html'});
    return res.end(renderHTML());
  }

  const projectName = decodeURIComponent(pathParts[0]);
  const filePath = pathParts.slice(1).join('/');

  if (pathParts.length === 1) {
    const structure = Raldowork.enter(projectName);
    
    if (structure && structure.includes('index.html')) {
      Raldowork.read(projectName, 'index.html', (content) => {
        res.writeHead(200, {'Content-Type': 'text/html'});
        res.end(content);
      });
    } else {
      res.writeHead(200, {'Content-Type': 'text/html'});
      res.end(renderDirectory(projectName, structure || []));
    }
    return;
  }

  Raldowork.read(projectName, filePath, (content) => {
    if (content === null) {
      res.writeHead(404, {'Content-Type': 'text/html'});
      return res.end(`<h1>404 Not Found</h1><p>${filePath} not found in ${projectName}</p>`);
    }

    const contentType = getContentType(filePath);
    res.writeHead(200, {'Content-Type': contentType});
    res.end(content);
  });
});

server.listen(PORT, () => {
  console.log(`Server running at http://localhost:${PORT}`);
});
